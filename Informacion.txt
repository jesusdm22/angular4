El siguiente proyecto trata la construcción de una aplicación web en el lenguaje Angular. 
Para este proceso, se debe poseer un conocimiento previo en HTML, CSS y Javascript para 
posteriormente poder hacer hincapié en el aprendizaje de Angular hasta poder llegar a 
realizar una sencilla aplicación la cual servirá como primer proyecto de aprendizaje e iniciación en Angular 4.

¿Qué es Angular?
Angular es un framework de desarrollo basado en Javascript y creado por Google, el cual nos permite 
el desarrollo de aplicaciones SPA y que nos permite trabajar con los elementos de la web de una manera óptima y sencilla.

¿Qué es una aplicación SPA?
Una aplicación SPA o Single Page Application es una aplicación web construida en una sola página 
con el propósito de proporcionar una experiencia más fluida a los usuarios y adaptando una forma 
parecida a la de una aplicación de escritorio. La navegación entre secciones y páginas pertenecientes
a la aplicación se hace de manera dinámica e instantánea resaltando que en ningún momento se recarga la 
página ni carga otra página (puesto que además de por otras razones, la aplicación trabaja y fluye con una sola página).

¿Qué conocimientos previos se debe tener? ¿Qué versión de Angular usaremos?
Para comenzar a introducirnos en Angular, se recomienda tener un conocimiento previo en algunos campos como HTML, CSS,
Javascript, Typescript o DOM. Así mismo, Angular posee numerosas versiones con las que trabajar: AngularJS, Angular 2,
Angular 4, entre otras. Nosotros llevaremos a cabo este trabajo con la versión Angular 4.



---------------------------------------------------------------------------------



· INSTALACIÓN DE NODEJS + ANGULAR 4 CON BOOTSTRAP Y TETHER


1. Instalamos NodeJS desde https://nodejs.org/ con una versión superior a la versión 9 [SALTAR SI YA ESTÁ INSTALADO].


2. Abrimos el puerto 4200 en nuestro firewall. Este será el puerto que ocupe Angular y mediante el cual trabajaremos.


3. Abrimos línea de comandos con permisos de administrador e instalamos Angular-CLI.
						
					      sudo npm install -g @angular/cli
				      

4. Ahora nos situamos en el directorio donde queramos alojar nuestro proyecto de Angular (que en este caso está en un
directorio que he creado dentro de la carpeta /opt) y tras ello ejecutamos el siguiente comando:

						ng new <Nombre del proyecto>

Llegados a este paso, se nos pedirá si queremos usar el routing de Angular, le diremos que NO. Cuando se nos pida qué
CSS queremos usar, simplemente pulsamos "Enter".


5. Accedemos dentro del directorio del proyecto y comprobamos la versión de Angular JS.

							  ng version


6. Listo, la aplicación ya estará corriendo en el puerto 4200. Lo próximo que haremos será instalar las librerías de
Bootstrap, Tether y jQuery situándonos en el directorio de nuestro proyecto Angular.

						npm install bootstrap jquery tether



---------------------------------------------------------------------------------



· VINCULACIÓN DE BOOTSTRAP Y TETHER CON ANGULAR 4


1. Para vincular tanto Bootstrap como Tether con Angular, debemos de dirigirnos hacia el archivo "angular.json" y
modificaremos la línea de styles y scripts donde añadiremos la ruta hacia nuestro Bootstrap y Tether de la siguiente manera:

				"styles": [
					"../node_modules/bootstrap/dist/css/bootstrap.css"
				],
				"scripts": [
					"../node_modules/jquery/dist/jquery.js",
					"../node_modules/tether/dist/js/tether.js,
					"../node_modules/bootstrap/dist/js/bootstrap.js"
				]
				
Lo que hacemos con estos parámetros es utilizar y aplicar el código almacenado en estos archivos JS en nuestra aplicación Angular.


2. A continuación, debemos de arrancar el servicio de Angular en el directorio donde alojamos nuestra app con: ng serve. Esto puede
presentar problemas los cuales tendremos la posibilidad de solucionar actualizando el cliente de Angular tecleando los siguientes
comandos en el orden en el que te se indica:

				    *** HACER SOLO ESTO SI TU VERSIÓN DE ANGULAR ES ANTIGUA ***

						~ npm uninstall -g angular-cli
						
						~ npm uninstall --save-dev angular-cli
						
						~ npm uninstall -g @angular-cli
						
						~ npm cache clean
						
						~ npm install -g @angular/cli@latest
